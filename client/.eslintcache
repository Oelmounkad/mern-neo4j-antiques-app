[{"C:\\Users\\Oussama\\Desktop\\pfe-test-api\\client\\src\\index.js":"1","C:\\Users\\Oussama\\Desktop\\pfe-test-api\\client\\src\\App.js":"2","C:\\Users\\Oussama\\Desktop\\pfe-test-api\\client\\src\\components\\PersonList.js":"3","C:\\Users\\Oussama\\Desktop\\pfe-test-api\\client\\src\\context\\person\\PersonState.js":"4","C:\\Users\\Oussama\\Desktop\\pfe-test-api\\client\\src\\context\\person\\PersonReducer.js":"5","C:\\Users\\Oussama\\Desktop\\pfe-test-api\\client\\src\\context\\person\\PersonContext.js":"6","C:\\Users\\Oussama\\Desktop\\pfe-test-api\\client\\src\\context\\types.js":"7","C:\\Users\\Oussama\\Desktop\\pfe-test-api\\client\\src\\components\\Person.js":"8","C:\\Users\\Oussama\\Desktop\\pfe-test-api\\client\\src\\components\\NeoGraph.js":"9","C:\\Users\\Oussama\\Desktop\\pfe-test-api\\client\\src\\components\\AddPerson.js":"10","C:\\Users\\Oussama\\Desktop\\pfe-test-api\\client\\src\\components\\Group.js":"11","C:\\Users\\Oussama\\Desktop\\pfe-test-api\\client\\src\\components\\AddResource.js":"12","C:\\Users\\Oussama\\Desktop\\pfe-test-api\\client\\src\\components\\AddGroup.js":"13","C:\\Users\\Oussama\\Desktop\\pfe-test-api\\client\\src\\components\\AddProcess.js":"14","C:\\Users\\Oussama\\Desktop\\pfe-test-api\\client\\src\\components\\ConnectGroupProcess.js":"15","C:\\Users\\Oussama\\Desktop\\pfe-test-api\\client\\src\\components\\EditPerson.js":"16","C:\\Users\\Oussama\\Desktop\\pfe-test-api\\client\\src\\components\\ConnectEntities.js":"17"},{"size":219,"mtime":1607014317158,"results":"18","hashOfConfig":"19"},{"size":1519,"mtime":1610200959635,"results":"20","hashOfConfig":"19"},{"size":2442,"mtime":1610207273240,"results":"21","hashOfConfig":"19"},{"size":11390,"mtime":1610206941170,"results":"22","hashOfConfig":"19"},{"size":4757,"mtime":1610205028228,"results":"23","hashOfConfig":"19"},{"size":108,"mtime":1607015145917,"results":"24","hashOfConfig":"19"},{"size":1261,"mtime":1610204995639,"results":"25","hashOfConfig":"19"},{"size":3416,"mtime":1610364384438,"results":"26","hashOfConfig":"19"},{"size":4254,"mtime":1609666720071,"results":"27","hashOfConfig":"19"},{"size":1887,"mtime":1609669111824,"results":"28","hashOfConfig":"19"},{"size":5346,"mtime":1610364389653,"results":"29","hashOfConfig":"19"},{"size":151,"mtime":1609235016441,"results":"30","hashOfConfig":"19"},{"size":2705,"mtime":1609667137579,"results":"31","hashOfConfig":"19"},{"size":3339,"mtime":1609762163392,"results":"32","hashOfConfig":"19"},{"size":3969,"mtime":1609762155972,"results":"33","hashOfConfig":"19"},{"size":2479,"mtime":1609768444491,"results":"34","hashOfConfig":"19"},{"size":3941,"mtime":1610364574162,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"iejcsp",{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"38"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"38"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"38"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"38"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"38"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"38"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Oussama\\Desktop\\pfe-test-api\\client\\src\\index.js",[],["78","79"],"C:\\Users\\Oussama\\Desktop\\pfe-test-api\\client\\src\\App.js",["80"],"import './App.css';\nimport {BrowserRouter as Router , Switch , Route} from 'react-router-dom'\nimport PersonList from './components/PersonList';\nimport PersonState from './context/person/PersonState';\nimport Group from './components/Group';\nimport Person from './components/Person';\nimport AddPerson from './components/AddPerson';\nimport AddResource from './components/AddResource';\nimport AddGroup from './components/AddGroup';\nimport AddProcess from './components/AddProcess';\nimport ConnectGroupProcess from './components/ConnectGroupProcess';\nimport EditPerson from './components/EditPerson';\nimport ConnectEntities from './components/ConnectEntities';\n\n\nfunction App() {\n  return (\n   <PersonState>\n    <Router>\n\n      <Switch>\n\n          <Route exact path=\"/\" component={PersonList} />\n          <Route exact path=\"/persons\" component={PersonList} />\n          <Route exact path=\"/person/:id\" component={Person} />\n          <Route exact path=\"/group/:id\" component={Group} />\n          \n          <Route exact path=\"/persons/add\" component={AddPerson} />\n          <Route exact path=\"/persons/:id/edit\" component={EditPerson} />\n          <Route exact path=\"/groups/add\" component={AddGroup} />\n          <Route exact path=\"/processes/add\" component={AddProcess} />\n\n          <Route exact path=\"/connect/group-process\" component={ConnectGroupProcess} />\n          <Route exact path=\"/connect/entities\" component={ConnectEntities} />\n\n      </Switch>\n\n    </Router>\n    </PersonState>\n  );\n}\n\nexport default App;\n","C:\\Users\\Oussama\\Desktop\\pfe-test-api\\client\\src\\components\\PersonList.js",["81"],"import React,{useContext,useEffect,useState} from 'react'\r\nimport PersonContext from '../context/person/PersonContext'\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst PersonList = () => {\r\n\r\n\r\n    const personContext = useContext(PersonContext)\r\n    const {persons , getAllPersons,searchPersons,deleteChosenPerson,deletePerson} = personContext\r\n    const [searchString, setSearchString] = useState('')\r\n\r\nuseEffect(() => {\r\n    getAllPersons()\r\n    deleteChosenPerson()\r\n}, []);\r\n\r\nconst onChange = e => {\r\n    setSearchString(e.target.value)\r\n}\r\nconst onSubmit = e => {\r\n    e.preventDefault()\r\n    searchPersons(searchString)\r\n}\r\n    return (\r\n        <>\r\n        {persons !== null ? \r\n        <>\r\n    <h2>Persons List :</h2>\r\n\r\n    <form className=\"form-inline\" onSubmit={onSubmit}>\r\n\r\n  <div className=\"form-group\">\r\n    <input type=\"text\" class=\"form-control\" placeholder=\"Name\" value={searchString} onChange={onChange} required/>\r\n  </div>\r\n\r\n  <div className=\"form-group\" >\r\n      <input type=\"submit\" class=\"btn btn-primary\" value=\"Search\"/>\r\n      </div>\r\n      <div className=\"form-group\" >\r\n      <Link class=\"btn btn-outline-success\" to=\"/persons/add\">Add Person</Link>\r\n      </div>\r\n      <div className=\"form-group\" >\r\n      <Link class=\"btn btn-outline-success\" to=\"/groups/add\">Add Group</Link>\r\n      </div>\r\n      <div className=\"form-group\" >\r\n      <Link class=\"btn btn-outline-success\" to=\"/processes/add\">Add Process</Link>\r\n      </div>\r\n\r\n      <div className=\"form-group\" >\r\n      <Link class=\"btn btn-outline-success\" to=\"/connect/group-process\">Connect Grp-Process</Link>\r\n      </div>\r\n\r\n      <div className=\"form-group\" >\r\n      <Link class=\"btn btn-outline-success\" to=\"/connect/entities\">Connect Everything</Link>\r\n      </div>\r\n</form>\r\n\r\n<br/>\r\n        <div class=\"list-group\">\r\n            {persons.map(person => <>\r\n            <div><Link class=\"list-group-item list-group-item-action list-group-item-dark\" to={`/person/${person.identity.low}`}> \r\n            {person.properties.name} ({person.properties.birth} - {person.properties.death})</Link> <button type=\"button\" onClick={() => deletePerson(person.identity.low)} class=\"btn btn-danger\">Delete</button> <Link to={`/persons/${person.identity.low}/edit`} class=\"btn btn-warning\">Edit</Link></div><br/></>)   }\r\n        </div> \r\n\r\n        </>\r\n        : \r\n        \r\n        <div>No results</div>  }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PersonList\r\n","C:\\Users\\Oussama\\Desktop\\pfe-test-api\\client\\src\\context\\person\\PersonState.js",[],"C:\\Users\\Oussama\\Desktop\\pfe-test-api\\client\\src\\context\\person\\PersonReducer.js",["82","83"],"import {GET_ALL_PERSONS,PERSIST_GROUP,PERSIST_CHOSEN_PERSON,DELETE_CHOSEN_PERSON,PERSIST_CHOSEN_PERSON_GROUPS,PERSIST_CHOSEN_GROUP,PERSIST_CHOSEN_GROUP_MEMBERS,\r\n    DELETE_PERSON,PERSIST_CHOSEN_GROUP_PROCESSES,PERSIST_CHOSEN_PERSON_NAMES,PERSIST_MEMBERS,FILTER_MEMBERS,PERSIST_GROUPS,PERSIST_PROCESSES,FILTER_GROUPS,FILTER_PROCESSES,PERSIST_ENTITIES1,PERSIST_ENTITIES2,PERSIST_ENTITY_LABELS1,PERSIST_ENTITY_LABELS2,PERSIST_RELATIONSHIPS} from '../types'\r\n\r\n\r\nexport default (state, action) => {\r\n    switch(action.type){\r\n        case GET_ALL_PERSONS:\r\n            return {\r\n                ...state,\r\n                persons : action.payload\r\n            }\r\n            case PERSIST_MEMBERS:\r\n            return {\r\n                ...state,\r\n                members : action.payload,\r\n                members2: action.payload\r\n            }\r\n            case FILTER_MEMBERS:\r\n            return {\r\n                ...state,\r\n                members2 : state.members2.filter(mem => {\r\n                    const regex = new RegExp(`${action.payload}`, 'gi')\r\n                    return mem.properties.name.match(regex)\r\n                })\r\n            }\r\n            case PERSIST_GROUPS:\r\n            return {\r\n                ...state,\r\n                connectGroups : action.payload,\r\n                connectGroups2 : action.payload\r\n            }\r\n            case PERSIST_PROCESSES:\r\n            return {\r\n                ...state,\r\n                connectProcesses : action.payload,\r\n                connectProcesses2 : action.payload\r\n            }\r\n            case FILTER_GROUPS:\r\n                return {\r\n                    ...state,\r\n                    connectGroups2 : state.connectGroups2.filter(gr => {\r\n                        const regex = new RegExp(`${action.payload}`, 'gi')\r\n                        return gr.properties.label.match(regex)\r\n                    })\r\n                }\r\n                case FILTER_PROCESSES:\r\n                    return {\r\n                        ...state,\r\n                        connectProcesses2 : state.connectProcesses2.filter(pr => {\r\n                            const regex = new RegExp(`${action.payload}`, 'gi')\r\n                            return pr.properties.label.match(regex)\r\n                        })\r\n                    }\r\n            case DELETE_PERSON:\r\n            return {\r\n                ...state,\r\n                persons : state.persons.filter(p => p.identity.low !== action.payload)\r\n            }\r\n            case PERSIST_GROUP:\r\n            return {\r\n                ...state,\r\n                group : action.payload\r\n            }\r\n            case PERSIST_CHOSEN_PERSON:\r\n            return {\r\n                ...state,\r\n                chosenPerson : action.payload\r\n            }\r\n            case PERSIST_CHOSEN_GROUP:\r\n                return {\r\n                    ...state,\r\n                    chosenGroup : action.payload\r\n                }\r\n                case PERSIST_CHOSEN_GROUP_MEMBERS:\r\n                return {\r\n                    ...state,\r\n                    chosenGroupMembers : action.payload\r\n                }\r\n                case PERSIST_CHOSEN_GROUP_PROCESSES:\r\n                return {\r\n                    ...state,\r\n                    chosenGroupProcesses : action.payload\r\n                }\r\n            case PERSIST_CHOSEN_PERSON_GROUPS:\r\n            return{\r\n                ...state,\r\n                chosenPersonGroups: action.payload\r\n            }\r\n            case PERSIST_CHOSEN_PERSON_NAMES:\r\n            return{\r\n                ...state,\r\n                chosenPersonNames: action.payload\r\n            }\r\n            case DELETE_CHOSEN_PERSON:\r\n                return {\r\n                    ...state,\r\n                    chosenPerson : null\r\n                }\r\n            case PERSIST_ENTITIES1:\r\n                return {\r\n                        ...state,\r\n                        entities1 : action.payload\r\n                    }\r\n            case PERSIST_ENTITIES2:\r\n                return {\r\n                        ...state,\r\n                         entities2 : action.payload\r\n                       }   \r\n              case PERSIST_ENTITY_LABELS1:\r\n                return {\r\n                        ...state,\r\n                        entities1labels : action.payload\r\n                       }\r\n               case PERSIST_ENTITY_LABELS2:\r\n                return {\r\n                        ...state,\r\n                        entities2labels : action.payload\r\n                       }\r\n                       case PERSIST_RELATIONSHIPS:\r\n                        return {\r\n                                ...state,\r\n                                relationships : action.payload\r\n                               }\r\n    }\r\n}","C:\\Users\\Oussama\\Desktop\\pfe-test-api\\client\\src\\context\\person\\PersonContext.js",[],"C:\\Users\\Oussama\\Desktop\\pfe-test-api\\client\\src\\context\\types.js",[],"C:\\Users\\Oussama\\Desktop\\pfe-test-api\\client\\src\\components\\Person.js",["84"],"C:\\Users\\Oussama\\Desktop\\pfe-test-api\\client\\src\\components\\NeoGraph.js",["85"],"import React, { useEffect, useRef } from \"react\";\r\nimport useResizeAware from \"react-resize-aware\";\r\nimport PropTypes from \"prop-types\";\r\nimport Neovis from \"neovis.js/dist/neovis.js\";\r\n\r\nconst NeoGraph = (props) => {\r\n  const {\r\n    width,\r\n    height,\r\n    containerId,\r\n    backgroundColor,\r\n    neo4jUri,\r\n    neo4jUser,\r\n    neo4jPassword,\r\n    init_cypher\r\n  } = props;\r\n\r\n  const visRef = useRef();\r\n\r\n  useEffect(() => {\r\n    const config = {\r\n      container_id: visRef.current.id,\r\n      server_url: neo4jUri,\r\n      server_user: neo4jUser,\r\n      server_password: neo4jPassword,\r\n      labels: {\r\n\t\t\t\"Person\":{\r\n                caption: \"name\",\r\n                size: 0.5,\r\n                font: '20px arial red',\r\n            },\r\n            \"Name\":{\r\n\t\t\t\tcaption: \"label\",\r\n                size: 0.5,\r\n                font: '15px arial black'\r\n            },\r\n\t\t\t\"Group\":{\r\n\t\t\t\tcaption: \"label\",\r\n                size: 0.5,\r\n                font: '15px arial black'\r\n            },\r\n            \"Process\":{\r\n\t\t\t\tcaption: \"label\",\r\n                size: 0.5,\r\n                font: '15px arial black'\r\n            },\r\n            \"Event\":{\r\n                caption: \"label\",\r\n                size: 0.5,\r\n                font: '15px arial black'\r\n            },\r\n      \t    \"Function\":{\r\n\t\t\t\t        caption: \"label\",\r\n                size: 0.5,\r\n                font: '15px arial black'\r\n            },\r\n      \t    \"Timespan\":{\r\n\t\t\t\t        caption: \"label\",\r\n                size: 0.5,\r\n                font: '15px arial black'\r\n            },\r\n      \t    \"Activity\":{\r\n\t\t\t\t        caption: \"name\",\r\n                size: 0.5,\r\n                font: '15px arial black'\r\n            },\r\n      \t    \"Source\":{\r\n\t\t\t\t        caption: \"label\",\r\n                size: 0.5,\r\n                font: '15px arial black'\r\n            },\r\n            \"Location\":{\r\n              caption: \"label\",\r\n              size: 0.5,\r\n              font: '15px arial black'\r\n          }\r\n      },\r\n      relationships: {\r\n        \"WAS_MEMBER_IN\":{\r\n            thickness: \"50\"\r\n        },\r\n        \"NAMED\":{\r\n            thickness: \"10\"\r\n        },\r\n        \"DID_PROCESS\":{\r\n            thickness: \"10\"\r\n        },\r\n        \"SUB_PROCESS\":{\r\n            thickness: \"10\"\r\n        },\r\n        \"HAS_EVENT\":{\r\n            thickness: \"10\"\r\n        },\r\n        \"ACCORDING_TO\":{\r\n          thickness: \"10\"\r\n      },\r\n        \"WAS_A\":{\r\n        thickness: \"10\"\r\n    },\r\n        \"ACTIVITY\":{\r\n        thickness: \"10\"\r\n    },\r\n        \"IN_TIME\":{\r\n        thickness: \"10\"\r\n        },\r\n        \"IN_LOCATION\":{\r\n          thickness: \"10\"\r\n          },\r\n          \"FATHER_OF\":{\r\n            thickness: \"10\"\r\n            }\r\n      },\r\n\t  arrows: true,\r\n      initial_cypher:\r\n        init_cypher,\r\n    };\r\n    const vis = new Neovis(config);\r\n    vis.render();\r\n  }, [neo4jUri, neo4jUser, neo4jPassword]);\r\n\r\n  return (\r\n    <div\r\n      id={containerId}\r\n      ref={visRef}\r\n      style={{\r\n        width: `${width}px`,\r\n        height: `${height}px`,\r\n        backgroundColor: `${backgroundColor}`,\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nNeoGraph.defaultProps = {\r\n  width: 600,\r\n  height: 600,\r\n  backgroundColor: \"#d3d3d3\",\r\n};\r\n\r\nNeoGraph.propTypes = {\r\n  width: PropTypes.number.isRequired,\r\n  height: PropTypes.number.isRequired,\r\n  containerId: PropTypes.string.isRequired,\r\n  neo4jUri: PropTypes.string.isRequired,\r\n  neo4jUser: PropTypes.string.isRequired,\r\n  neo4jPassword: PropTypes.string.isRequired,\r\n  backgroundColor: PropTypes.string,\r\n};\r\n\r\nconst ResponsiveNeoGraph = (props) => {\r\n  const [resizeListener, sizes] = useResizeAware();\r\n\r\n  const side = Math.max(sizes.width, sizes.height) / 2;\r\n  const neoGraphProps = { ...props, width: side, height: side };\r\n  return (\r\n    <div style={{ position: \"relative\" }}>\r\n      {resizeListener}\r\n      <NeoGraph {...neoGraphProps} />\r\n    </div>\r\n  );\r\n};\r\n\r\nResponsiveNeoGraph.defaultProps = {\r\n  backgroundColor: \"#d3d3d3\",\r\n};\r\n\r\nResponsiveNeoGraph.propTypes = {\r\n  containerId: PropTypes.string.isRequired,\r\n  neo4jUri: PropTypes.string.isRequired,\r\n  neo4jUser: PropTypes.string.isRequired,\r\n  neo4jPassword: PropTypes.string.isRequired,\r\n  backgroundColor: PropTypes.string,\r\n};\r\n\r\nexport { NeoGraph, ResponsiveNeoGraph };","C:\\Users\\Oussama\\Desktop\\pfe-test-api\\client\\src\\components\\AddPerson.js",[],"C:\\Users\\Oussama\\Desktop\\pfe-test-api\\client\\src\\components\\Group.js",["86"],"C:\\Users\\Oussama\\Desktop\\pfe-test-api\\client\\src\\components\\AddResource.js",[],"C:\\Users\\Oussama\\Desktop\\pfe-test-api\\client\\src\\components\\AddGroup.js",["87","88"],"import React,{useState,useEffect, useContext,useRef} from 'react'\r\nimport PersonContext from '../context/person/PersonContext'\r\n\r\nconst AddGroup = () => {\r\n\r\n    const personContext = useContext(PersonContext)\r\n    const {members,members2,getMembers,filterMembers,createGroup} = personContext\r\n\r\n    const [group, setGroup] = useState('')\r\n    const [test, setTest] = useState([])\r\n\r\n    const text = useRef('')\r\n\r\n    const onChange = e => {\r\n        if(text.current.value !== ''){\r\n            filterMembers(e.target.value)\r\n        }else{\r\n            getMembers()\r\n        }\r\n    }\r\n\r\n    const onLabelChange = e => {\r\n        setGroup(e.target.value)\r\n    }\r\n    const onMemberChange = e => {\r\n        if(!test.includes(e.target.value)){\r\n            setTest([...test,e.target.value])\r\n        }else{\r\n            setTest(test.filter(item => item !== e.target.value))\r\n        }\r\n        \r\n    }\r\nconst resetSelect = () => {\r\n    setTest([])\r\n}\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault()\r\n        console.log(\"test : \"+test)\r\n        const members = test.map(e => parseInt(e))\r\n        const data = {\r\n            label:group,\r\n            members\r\n        }\r\n        console.log('daaaata: ',data)\r\n        if(members.length == 0){\r\n            alert(\"Add members to the group !!\")\r\n        }else{\r\n            createGroup(data)\r\n        }\r\n        \r\n    }\r\n\r\n    useEffect(() => {\r\n        getMembers()\r\n        console.log(members)\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n        <h2>Create Group :</h2>\r\n\r\n        <form onSubmit={onSubmit}>\r\n\r\n  <div class=\"form-group\">\r\n    <label>Label</label>\r\n    <input type=\"text\" class=\"form-control\" placeholder=\"Label\" value={group} name=\"group\" onChange={onLabelChange} required/>\r\n  </div>\r\n\r\n  <div class=\"form-group\">\r\n    <label for=\"members\">Members</label>\r\n    <input ref={text} type=\"text\" class=\"form-control\" placeholder=\"Search\" name=\"search\" onChange={onChange}/>\r\n    <select class=\"form-control\" id=\"members\" value={test} onChange={onMemberChange} multiple={true}>\r\n        {members2.length !== 0 && members2.map(member => \r\n            <option value={member.identity.low}>{member.properties.name}</option>\r\n            )}\r\n    </select>\r\n    <button onClick={resetSelect} type=\"button\" class=\"btn btn-warning\">reset members</button>\r\n  </div>\r\n  {test.length !== 0 && <div>\r\n      <p>selected members :</p>\r\n      <ul>\r\n          {members.map(m => test.includes(m.identity.low.toString()) && <li>{ m.properties.name }</li>)}\r\n      </ul>\r\n  </div>}\r\n  \r\n  <div className=\"form-group\" >\r\n      <input type=\"submit\" class=\"btn btn-success\" value=\"submit\"/>\r\n      </div>\r\n</form>\r\n</>\r\n    )\r\n}\r\n\r\nexport default AddGroup\r\n","C:\\Users\\Oussama\\Desktop\\pfe-test-api\\client\\src\\components\\AddProcess.js",[],"C:\\Users\\Oussama\\Desktop\\pfe-test-api\\client\\src\\components\\ConnectGroupProcess.js",["89","90"],"import React,{useEffect,useRef,useState,useContext} from 'react'\r\nimport PersonContext from '../context/person/PersonContext'\r\n\r\n\r\nconst ConnectGroupProcess = props => {\r\n\r\n    const personContext = useContext(PersonContext)\r\n    const {connectGroups,connectGroups2,connectProcesses,connectProcesses2,\r\n            getGroups,getProcesses,filterGroups,\r\n            filterProcesses,connectGroupProcess} = personContext\r\n\r\n    const text1 = useRef('')\r\n    const text2 = useRef('')\r\n\r\n    const [group, setGroup] = useState('')\r\n    const [processes, setProcesses] = useState([])\r\n\r\n    const onGroupChange = e => {\r\n            setGroup(e.target.value)\r\n\r\n    }\r\n    const onProcessChange = e => {\r\n        if(!processes.includes(e.target.value)){\r\n            setProcesses([...processes,e.target.value])\r\n        }else{\r\n            setProcesses(processes.filter(item => item !== e.target.value))\r\n        }\r\n    }\r\n\r\n    const onGroupSearchChange = e => {\r\n        if(text1.current.value !== ''){\r\n            filterGroups(e.target.value)\r\n        }else{\r\n            getGroups()\r\n        }\r\n    }\r\n\r\n    const onProcessSearchChange = e => {\r\n        if(text2.current.value !== ''){\r\n            filterProcesses(e.target.value)\r\n        }else{\r\n            getProcesses()\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        getGroups()\r\n        getProcesses()\r\n    }, [])\r\n\r\n    const resetProcesses = () => {\r\n        setProcesses([])\r\n    }\r\n    const resetGroup = () => {\r\n        setGroup('')\r\n    }\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault()\r\n        const groupInt = parseInt(group)\r\n        const processesInt = processes.map(e => parseInt(e))\r\n        const data = {\r\n            group:groupInt,\r\n            processes:processesInt\r\n        }\r\n        if(group !== '' && processes.length !== 0){\r\n            connectGroupProcess(data)\r\n            setTimeout(() => {\r\n                props.history.push('/')\r\n           }, 1000);\r\n        }else{\r\n            alert(\"fill the group and the processes!!\")\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <h2>Connect a Group to a process:</h2>\r\n\r\n        <form onSubmit={onSubmit}>\r\n\r\n\r\n  <div class=\"form-group\">\r\n    <label for=\"members\">Groups</label>\r\n    <input ref={text1} type=\"text\" class=\"form-control\" placeholder=\"Search Groups\" name=\"searchgroup\" onChange={onGroupSearchChange}/>\r\n    <select class=\"form-control\" id=\"members\" value={group} onChange={onGroupChange} multiple={false}>\r\n        {connectGroups2 && connectGroups2.length !== 0 && connectGroups2.map(grp => \r\n            <option value={grp.identity.low}>{grp.properties.label}</option>\r\n            )}\r\n    </select>\r\n    <button onClick={resetGroup} type=\"button\" class=\"btn btn-warning\">reset Groups</button>\r\n  </div>\r\n  {group !== \"\" && <div>\r\n      <p>selected Group :</p>\r\n      {connectGroups.map(m => group == m.identity.low.toString() && <li>{ m.properties.label }</li>)}\r\n  </div>}\r\n  <div class=\"form-group\">\r\n    <label for=\"members\">Processes</label>\r\n    <input ref={text2} type=\"text\" class=\"form-control\" placeholder=\"Search Processes\" name=\"searchprocess\" onChange={onProcessSearchChange}/>\r\n    <select class=\"form-control\" id=\"members\" value={processes} onChange={onProcessChange} multiple={true}>\r\n        {connectProcesses2.length !== 0 && connectProcesses2.map(pr => \r\n            <option value={pr.identity.low}>{pr.properties.label}</option>\r\n            )}\r\n    </select>\r\n    <button onClick={resetProcesses} type=\"button\" class=\"btn btn-warning\">reset Processes</button>\r\n  </div>\r\n  {processes.length !== 0 && <div>\r\n      <p>selected processes :</p>\r\n      <ul>\r\n          {connectProcesses.map(m => processes.includes(m.identity.low.toString()) && <li>{ m.properties.label }</li>)}\r\n      </ul>\r\n  </div>}\r\n  \r\n  <div className=\"form-group\" >\r\n      <input type=\"submit\" class=\"btn btn-success\" value=\"submit\"/>\r\n      </div>\r\n</form>\r\n</>\r\n    )\r\n}\r\n\r\nexport default ConnectGroupProcess\r\n","C:\\Users\\Oussama\\Desktop\\pfe-test-api\\client\\src\\components\\EditPerson.js",["91"],"import React,{useContext,useState,useEffect} from 'react'\r\nimport PersonContext from '../context/person/PersonContext'\r\n\r\nconst EditPerson = props => {\r\n\r\n    const personContext = useContext(PersonContext)\r\n    const {getPersonById,chosenPerson,editPerson} = personContext\r\n\r\n    const { match: { params } } = props\r\n\r\n    const [person, setPerson] = useState({\r\n        name: '',\r\n        gender: 'Male',\r\n        birth: '',\r\n        death: ''\r\n    })\r\n\r\n    const onChange = e => {\r\n        setPerson({\r\n            ...person,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n    useEffect(() => {\r\n        getPersonById(params.id)\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if(chosenPerson !== null){\r\n            setPerson({\r\n                    name: chosenPerson.properties.name,\r\n                    gender: chosenPerson.properties.gender,\r\n                    birth: chosenPerson.properties.birth,\r\n                    death: chosenPerson.properties.death\r\n                })\r\n        }\r\n        \r\n    }, [chosenPerson])\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault()\r\n       // console.log(person)\r\n        editPerson(params.id,person)\r\n        setTimeout(() => {\r\n             props.history.push('/')\r\n        }, 1000);\r\n       \r\n    }\r\n\r\n    return (\r\n       <>\r\n  <h2>Edit Person :</h2>\r\n\r\n  {chosenPerson !== null && \r\n  <form onSubmit={onSubmit} >\r\n  <div class=\"form-group\">\r\n    <label>Name</label>\r\n    <input type=\"text\" class=\"form-control\" placeholder=\"Name\" value={person.name} name=\"name\" onChange={onChange} required/>\r\n  </div>\r\n  <div class=\"form-group\">\r\n    <label>Gender</label>\r\n    <select class=\"form-control\" value={person.gender} name=\"gender\" onChange={onChange}>\r\n      <option value=\"Male\">Male</option>\r\n      <option value=\"Female\">Female</option>\r\n      <option value=\"...\">Not defined</option>\r\n    </select>\r\n  </div>\r\n\r\n  <div class=\"form-group\">\r\n    <label>Birth Year</label>\r\n    <input type=\"text\" class=\"form-control\" placeholder=\"Birth Year\" name=\"birth\" value={person.birth} onChange={onChange}/>\r\n  </div>\r\n\r\n  <div class=\"form-group\">\r\n    <label>Death Year</label>\r\n    <input type=\"text\" class=\"form-control\" placeholder=\"Death Year\" name=\"death\" value={person.death} onChange={onChange}/>\r\n  </div>\r\n\r\n  <div className=\"form-group\">\r\n      <input type=\"submit\" class=\"btn btn-warning\" value=\"Edit Person\"/>\r\n      </div>\r\n\r\n</form>\r\n  }\r\n  \r\n       </>\r\n    )\r\n}\r\n\r\nexport default EditPerson\r\n","C:\\Users\\Oussama\\Desktop\\pfe-test-api\\client\\src\\components\\ConnectEntities.js",["92","93"],{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","severity":1,"message":"99","line":8,"column":8,"nodeType":"100","messageId":"101","endLine":8,"endColumn":19},{"ruleId":"102","severity":1,"message":"103","line":15,"column":4,"nodeType":"104","endLine":15,"endColumn":6,"suggestions":"105"},{"ruleId":"106","severity":1,"message":"107","line":5,"column":1,"nodeType":"108","endLine":125,"endColumn":2},{"ruleId":"109","severity":1,"message":"110","line":6,"column":5,"nodeType":"111","messageId":"112","endLine":124,"endColumn":6},{"ruleId":"102","severity":1,"message":"113","line":21,"column":8,"nodeType":"104","endLine":21,"endColumn":10,"suggestions":"114"},{"ruleId":"102","severity":1,"message":"115","line":119,"column":6,"nodeType":"104","endLine":119,"endColumn":42,"suggestions":"116"},{"ruleId":"102","severity":1,"message":"117","line":20,"column":8,"nodeType":"104","endLine":20,"endColumn":10,"suggestions":"118"},{"ruleId":"119","severity":1,"message":"120","line":46,"column":27,"nodeType":"121","messageId":"122","endLine":46,"endColumn":29},{"ruleId":"102","severity":1,"message":"123","line":57,"column":8,"nodeType":"104","endLine":57,"endColumn":10,"suggestions":"124"},{"ruleId":"102","severity":1,"message":"125","line":48,"column":8,"nodeType":"104","endLine":48,"endColumn":10,"suggestions":"126"},{"ruleId":"119","severity":1,"message":"120","line":94,"column":37,"nodeType":"121","messageId":"122","endLine":94,"endColumn":39},{"ruleId":"102","severity":1,"message":"127","line":26,"column":8,"nodeType":"104","endLine":26,"endColumn":10,"suggestions":"128"},{"ruleId":"102","severity":1,"message":"129","line":43,"column":8,"nodeType":"104","endLine":43,"endColumn":10,"suggestions":"130"},{"ruleId":"102","severity":1,"message":"131","line":48,"column":8,"nodeType":"104","endLine":48,"endColumn":39,"suggestions":"132"},"no-native-reassign",["133"],"no-negated-in-lhs",["134"],"no-unused-vars","'AddResource' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'deleteChosenPerson' and 'getAllPersons'. Either include them or remove the dependency array.","ArrayExpression",["135"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","React Hook useEffect has missing dependencies: 'getGroupsByPersonId', 'getNamesByPersonId', 'getPersonById', and 'params.id'. Either include them or remove the dependency array.",["136"],"React Hook useEffect has a missing dependency: 'init_cypher'. Either include it or remove the dependency array.",["137"],"React Hook useEffect has missing dependencies: 'getGroupById', 'getGroupMembersByGroupId', 'getGroupProcessesByGroupId', and 'params.id'. Either include them or remove the dependency array.",["138"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'getMembers' and 'members'. Either include them or remove the dependency array.",["139"],"React Hook useEffect has missing dependencies: 'getGroups' and 'getProcesses'. Either include them or remove the dependency array.",["140"],"React Hook useEffect has missing dependencies: 'getPersonById' and 'params.id'. Either include them or remove the dependency array.",["141"],"React Hook useEffect has missing dependencies: 'getEntityLabels' and 'getRelationships'. Either include them or remove the dependency array.",["142"],"React Hook useEffect has missing dependencies: 'getEntities1' and 'getEntities2'. Either include them or remove the dependency array.",["143"],"no-global-assign","no-unsafe-negation",{"desc":"144","fix":"145"},{"desc":"146","fix":"147"},{"desc":"148","fix":"149"},{"desc":"150","fix":"151"},{"desc":"152","fix":"153"},{"desc":"154","fix":"155"},{"desc":"156","fix":"157"},{"desc":"158","fix":"159"},{"desc":"160","fix":"161"},"Update the dependencies array to be: [deleteChosenPerson, getAllPersons]",{"range":"162","text":"163"},"Update the dependencies array to be: [getGroupsByPersonId, getNamesByPersonId, getPersonById, params.id]",{"range":"164","text":"165"},"Update the dependencies array to be: [neo4jUri, neo4jUser, neo4jPassword, init_cypher]",{"range":"166","text":"167"},"Update the dependencies array to be: [getGroupById, getGroupMembersByGroupId, getGroupProcessesByGroupId, params.id]",{"range":"168","text":"169"},"Update the dependencies array to be: [getMembers, members]",{"range":"170","text":"171"},"Update the dependencies array to be: [getGroups, getProcesses]",{"range":"172","text":"173"},"Update the dependencies array to be: [getPersonById, params.id]",{"range":"174","text":"175"},"Update the dependencies array to be: [getEntityLabels, getRelationships]",{"range":"176","text":"177"},"Update the dependencies array to be: [entities1label, entities2label, getEntities1, getEntities2]",{"range":"178","text":"179"},[474,476],"[deleteChosenPerson, getAllPersons]",[765,767],"[getGroupsByPersonId, getNamesByPersonId, getPersonById, params.id]",[2840,2876],"[neo4jUri, neo4jUser, neo4jPassword, init_cypher]",[782,784],"[getGroupById, getGroupMembersByGroupId, getGroupProcessesByGroupId, params.id]",[1463,1465],"[getMembers, members]",[1367,1369],"[getGroups, getProcesses]",[659,661],"[getPersonById, params.id]",[1231,1233],"[getEntityLabels, getRelationships]",[1344,1375],"[entities1label, entities2label, getEntities1, getEntities2]"]