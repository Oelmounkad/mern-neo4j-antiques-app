[{"C:\\Users\\Oussama\\Desktop\\pfe-test-api\\client\\src\\index.js":"1","C:\\Users\\Oussama\\Desktop\\pfe-test-api\\client\\src\\App.js":"2","C:\\Users\\Oussama\\Desktop\\pfe-test-api\\client\\src\\components\\PersonList.js":"3","C:\\Users\\Oussama\\Desktop\\pfe-test-api\\client\\src\\context\\person\\PersonState.js":"4","C:\\Users\\Oussama\\Desktop\\pfe-test-api\\client\\src\\context\\person\\PersonReducer.js":"5","C:\\Users\\Oussama\\Desktop\\pfe-test-api\\client\\src\\context\\person\\PersonContext.js":"6","C:\\Users\\Oussama\\Desktop\\pfe-test-api\\client\\src\\context\\types.js":"7","C:\\Users\\Oussama\\Desktop\\pfe-test-api\\client\\src\\components\\Person.js":"8","C:\\Users\\Oussama\\Desktop\\pfe-test-api\\client\\src\\components\\NeoGraph.js":"9","C:\\Users\\Oussama\\Desktop\\pfe-test-api\\client\\src\\components\\AddPerson.js":"10","C:\\Users\\Oussama\\Desktop\\pfe-test-api\\client\\src\\components\\Group.js":"11","C:\\Users\\Oussama\\Desktop\\pfe-test-api\\client\\src\\components\\AddResource.js":"12","C:\\Users\\Oussama\\Desktop\\pfe-test-api\\client\\src\\components\\AddGroup.js":"13","C:\\Users\\Oussama\\Desktop\\pfe-test-api\\client\\src\\components\\AddProcess.js":"14","C:\\Users\\Oussama\\Desktop\\pfe-test-api\\client\\src\\components\\ConnectGroupProcess.js":"15","C:\\Users\\Oussama\\Desktop\\pfe-test-api\\client\\src\\components\\EditPerson.js":"16"},{"size":219,"mtime":1607014317158,"results":"17","hashOfConfig":"18"},{"size":1380,"mtime":1609767110381,"results":"19","hashOfConfig":"18"},{"size":2295,"mtime":1609767173228,"results":"20","hashOfConfig":"18"},{"size":9028,"mtime":1609768109509,"results":"21","hashOfConfig":"18"},{"size":3694,"mtime":1609759661823,"results":"22","hashOfConfig":"18"},{"size":108,"mtime":1607015145917,"results":"23","hashOfConfig":"18"},{"size":955,"mtime":1609757691208,"results":"24","hashOfConfig":"18"},{"size":3420,"mtime":1609520939735,"results":"25","hashOfConfig":"18"},{"size":4254,"mtime":1609666720071,"results":"26","hashOfConfig":"18"},{"size":1887,"mtime":1609669111824,"results":"27","hashOfConfig":"18"},{"size":5350,"mtime":1609520935654,"results":"28","hashOfConfig":"18"},{"size":151,"mtime":1609235016441,"results":"29","hashOfConfig":"18"},{"size":2705,"mtime":1609667137579,"results":"30","hashOfConfig":"18"},{"size":3339,"mtime":1609762163392,"results":"31","hashOfConfig":"18"},{"size":3969,"mtime":1609762155972,"results":"32","hashOfConfig":"18"},{"size":2479,"mtime":1609768444491,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"iejcsp",{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"36"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"36"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"36"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"36"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Oussama\\Desktop\\pfe-test-api\\client\\src\\index.js",[],["71","72"],"C:\\Users\\Oussama\\Desktop\\pfe-test-api\\client\\src\\App.js",["73"],"C:\\Users\\Oussama\\Desktop\\pfe-test-api\\client\\src\\components\\PersonList.js",["74"],"C:\\Users\\Oussama\\Desktop\\pfe-test-api\\client\\src\\context\\person\\PersonState.js",[],"C:\\Users\\Oussama\\Desktop\\pfe-test-api\\client\\src\\context\\person\\PersonReducer.js",["75","76"],"C:\\Users\\Oussama\\Desktop\\pfe-test-api\\client\\src\\context\\person\\PersonContext.js",[],"C:\\Users\\Oussama\\Desktop\\pfe-test-api\\client\\src\\context\\types.js",[],"C:\\Users\\Oussama\\Desktop\\pfe-test-api\\client\\src\\components\\Person.js",["77"],"import React , {useEffect,useContext, Fragment} from \"react\";\r\nimport {Link} from 'react-router-dom'\r\nimport { ResponsiveNeoGraph } from \"./NeoGraph\";\r\nimport PersonContext from '../context/person/PersonContext'\r\n\r\n\r\nconst NEO4J_URI = \"bolt://54.172.13.65:33092\"; //20.74.17.168\r\nconst NEO4J_USER = \"neo4j\";\r\nconst NEO4J_PASSWORD = \"nickel-resident-confusions\";\r\n\r\nconst Person = props => {\r\n    \r\n    const personContext = useContext(PersonContext)\r\n    const {getPersonById,getGroupsByPersonId,getNamesByPersonId,chosenPerson,chosenPersonGroups,chosenPersonNames} = personContext\r\n    const { match: { params } } = props\r\n\r\n    useEffect(() => {\r\n        getPersonById(params.id)\r\n        getGroupsByPersonId(params.id)\r\n        getNamesByPersonId(params.id)\r\n    }, [])\r\n\r\n  return (/*style={{ fontFamily: \"Quicksand\"}}*/\r\n    <div style={{ fontFamily: \"Quicksand\"}}>\r\n        {chosenPerson !== null && \r\n        <>\r\n      <h1>{chosenPerson.properties.name} ({chosenPerson.properties.birth} - {chosenPerson.properties.death})</h1>\r\n\r\n        <ResponsiveNeoGraph\r\n        containerId={\"id0\"}\r\n        neo4jUri={NEO4J_URI}\r\n        neo4jUser={NEO4J_USER}\r\n        neo4jPassword={NEO4J_PASSWORD}\r\n        init_cypher={`match(p:Person)-[r*0..]->(g) where id(p)=${params.id} return p,r,g`}\r\n      /> \r\n      <br/>\r\n      <h4 className=\"underligned\">Person Properties:</h4>\r\n      {chosenPerson.properties !== null && \r\n  <ul>\r\n    {Object.keys(chosenPerson.properties).map(key => (\r\n      <li> <strong> {key.charAt(0).toUpperCase() + key.slice(1)}</strong>: {chosenPerson.properties[key]}</li>\r\n    ))}\r\n  </ul>\r\n}\r\n<hr className=\"hr1\" />\r\n{chosenPersonGroups.length !== 0 ?\r\n      (<>\r\n      <h4 className=\"underligned\">Participated in :</h4>\r\n        {\r\n          chosenPersonGroups.map(group => <> <h5> <Link to={`/group/${group.identity.low}`}>{group.properties.label}</Link></h5> <br/> </>)\r\n        }\r\n\r\n      </>) : <h4 style={{color: 'red'}}>No groups found for {chosenPerson.properties.name} !</h4>\r\n      }\r\n      <hr className=\"hr1\" />\r\n\r\n\r\n      {chosenPersonNames && chosenPersonNames[0] && chosenPersonNames[0].names.length !== 0 && <>\r\n    <h4 className=\"underligned\">Names:</h4>\r\n    {chosenPersonNames.map(f => f.names.map(name => \r\n      <>\r\n    <div>\r\n      <h4>+{name.node.properties.name}</h4>\r\n      <h6 className=\"underligned\">Properties:</h6>\r\n      <ul>\r\n        {Object.keys(name.node.properties).map(key => (\r\n    <li> <strong> {key.charAt(0).toUpperCase() + key.slice(1)}</strong>: {name.node.properties[key]}</li>\r\n  ))}\r\n      </ul>\r\n  \r\n</div>                  \r\n\r\n          {name.sources.length !== 0 && <>\r\n           <h5 className=\"underligned\">Sources:</h5>\r\n           {name.sources.map(source => \r\n            \r\n                <div className=\"source\">\r\n                      <h4>+{source.node.properties.book}</h4>\r\n                      <h6 className=\"underligned\">Properties:</h6>\r\n                      <ul>\r\n                        {Object.keys(source.node.properties).map(key => (\r\n                    <li> <strong> {key.charAt(0).toUpperCase() + key.slice(1)}</strong>: {source.node.properties[key]}</li>\r\n                  ))}\r\n                      </ul>\r\n                  \r\n                </div>  \r\n            )}\r\n            </>\r\n            }\r\n\r\n<hr className=\"hr2\" />\r\n</>\r\n))\r\n  \r\n} </> }\r\n       </>\r\n      }\r\n     \r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Person;\r\n","C:\\Users\\Oussama\\Desktop\\pfe-test-api\\client\\src\\components\\NeoGraph.js",["78"],"import React, { useEffect, useRef } from \"react\";\r\nimport useResizeAware from \"react-resize-aware\";\r\nimport PropTypes from \"prop-types\";\r\nimport Neovis from \"neovis.js/dist/neovis.js\";\r\n\r\nconst NeoGraph = (props) => {\r\n  const {\r\n    width,\r\n    height,\r\n    containerId,\r\n    backgroundColor,\r\n    neo4jUri,\r\n    neo4jUser,\r\n    neo4jPassword,\r\n    init_cypher\r\n  } = props;\r\n\r\n  const visRef = useRef();\r\n\r\n  useEffect(() => {\r\n    const config = {\r\n      container_id: visRef.current.id,\r\n      server_url: neo4jUri,\r\n      server_user: neo4jUser,\r\n      server_password: neo4jPassword,\r\n      labels: {\r\n\t\t\t\"Person\":{\r\n                caption: \"name\",\r\n                size: 0.5,\r\n                font: '20px arial red',\r\n            },\r\n            \"Name\":{\r\n\t\t\t\tcaption: \"label\",\r\n                size: 0.5,\r\n                font: '15px arial black'\r\n            },\r\n\t\t\t\"Group\":{\r\n\t\t\t\tcaption: \"label\",\r\n                size: 0.5,\r\n                font: '15px arial black'\r\n            },\r\n            \"Process\":{\r\n\t\t\t\tcaption: \"label\",\r\n                size: 0.5,\r\n                font: '15px arial black'\r\n            },\r\n            \"Event\":{\r\n                caption: \"label\",\r\n                size: 0.5,\r\n                font: '15px arial black'\r\n            },\r\n      \t    \"Function\":{\r\n\t\t\t\t        caption: \"label\",\r\n                size: 0.5,\r\n                font: '15px arial black'\r\n            },\r\n      \t    \"Timespan\":{\r\n\t\t\t\t        caption: \"label\",\r\n                size: 0.5,\r\n                font: '15px arial black'\r\n            },\r\n      \t    \"Activity\":{\r\n\t\t\t\t        caption: \"name\",\r\n                size: 0.5,\r\n                font: '15px arial black'\r\n            },\r\n      \t    \"Source\":{\r\n\t\t\t\t        caption: \"label\",\r\n                size: 0.5,\r\n                font: '15px arial black'\r\n            },\r\n            \"Location\":{\r\n              caption: \"label\",\r\n              size: 0.5,\r\n              font: '15px arial black'\r\n          }\r\n      },\r\n      relationships: {\r\n        \"WAS_MEMBER_IN\":{\r\n            thickness: \"50\"\r\n        },\r\n        \"NAMED\":{\r\n            thickness: \"10\"\r\n        },\r\n        \"DID_PROCESS\":{\r\n            thickness: \"10\"\r\n        },\r\n        \"SUB_PROCESS\":{\r\n            thickness: \"10\"\r\n        },\r\n        \"HAS_EVENT\":{\r\n            thickness: \"10\"\r\n        },\r\n        \"ACCORDING_TO\":{\r\n          thickness: \"10\"\r\n      },\r\n        \"WAS_A\":{\r\n        thickness: \"10\"\r\n    },\r\n        \"ACTIVITY\":{\r\n        thickness: \"10\"\r\n    },\r\n        \"IN_TIME\":{\r\n        thickness: \"10\"\r\n        },\r\n        \"IN_LOCATION\":{\r\n          thickness: \"10\"\r\n          },\r\n          \"FATHER_OF\":{\r\n            thickness: \"10\"\r\n            }\r\n      },\r\n\t  arrows: true,\r\n      initial_cypher:\r\n        init_cypher,\r\n    };\r\n    const vis = new Neovis(config);\r\n    vis.render();\r\n  }, [neo4jUri, neo4jUser, neo4jPassword]);\r\n\r\n  return (\r\n    <div\r\n      id={containerId}\r\n      ref={visRef}\r\n      style={{\r\n        width: `${width}px`,\r\n        height: `${height}px`,\r\n        backgroundColor: `${backgroundColor}`,\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nNeoGraph.defaultProps = {\r\n  width: 600,\r\n  height: 600,\r\n  backgroundColor: \"#d3d3d3\",\r\n};\r\n\r\nNeoGraph.propTypes = {\r\n  width: PropTypes.number.isRequired,\r\n  height: PropTypes.number.isRequired,\r\n  containerId: PropTypes.string.isRequired,\r\n  neo4jUri: PropTypes.string.isRequired,\r\n  neo4jUser: PropTypes.string.isRequired,\r\n  neo4jPassword: PropTypes.string.isRequired,\r\n  backgroundColor: PropTypes.string,\r\n};\r\n\r\nconst ResponsiveNeoGraph = (props) => {\r\n  const [resizeListener, sizes] = useResizeAware();\r\n\r\n  const side = Math.max(sizes.width, sizes.height) / 2;\r\n  const neoGraphProps = { ...props, width: side, height: side };\r\n  return (\r\n    <div style={{ position: \"relative\" }}>\r\n      {resizeListener}\r\n      <NeoGraph {...neoGraphProps} />\r\n    </div>\r\n  );\r\n};\r\n\r\nResponsiveNeoGraph.defaultProps = {\r\n  backgroundColor: \"#d3d3d3\",\r\n};\r\n\r\nResponsiveNeoGraph.propTypes = {\r\n  containerId: PropTypes.string.isRequired,\r\n  neo4jUri: PropTypes.string.isRequired,\r\n  neo4jUser: PropTypes.string.isRequired,\r\n  neo4jPassword: PropTypes.string.isRequired,\r\n  backgroundColor: PropTypes.string,\r\n};\r\n\r\nexport { NeoGraph, ResponsiveNeoGraph };","C:\\Users\\Oussama\\Desktop\\pfe-test-api\\client\\src\\components\\AddPerson.js",[],"C:\\Users\\Oussama\\Desktop\\pfe-test-api\\client\\src\\components\\Group.js",["79"],"import React , {useEffect,useContext, Fragment} from \"react\";\r\nimport {Link} from 'react-router-dom'\r\nimport { ResponsiveNeoGraph } from \"./NeoGraph\";\r\nimport PersonContext from '../context/person/PersonContext'\r\n\r\nconst NEO4J_URI = \"bolt://54.172.13.65:33092\"; //20.74.17.168\r\nconst NEO4J_USER = \"neo4j\";\r\nconst NEO4J_PASSWORD = \"nickel-resident-confusions\";\r\n\r\nconst Group = props => {\r\n    \r\n    const personContext = useContext(PersonContext)\r\n    const {getGroupById,getGroupMembersByGroupId,getGroupProcessesByGroupId,chosenGroup,chosenGroupMembers,chosenGroupProcesses} = personContext\r\n    const { match: { params } } = props\r\n\r\n    useEffect(() => {\r\n      getGroupById(params.id)\r\n      getGroupMembersByGroupId(params.id)\r\n      getGroupProcessesByGroupId(params.id)\r\n    }, [])\r\n\r\n  return (/*style={{ fontFamily: \"Quicksand\"}}*/\r\n    <div style={{ fontFamily: \"Quicksand\"}}>\r\n        {chosenGroup !== null && \r\n        <>\r\n      <h1>{chosenGroup.properties.label} </h1>\r\n\r\n        <ResponsiveNeoGraph\r\n        containerId={\"id0\"}\r\n        neo4jUri={NEO4J_URI}\r\n        neo4jUser={NEO4J_USER}\r\n        neo4jPassword={NEO4J_PASSWORD}\r\n        init_cypher={`match(g:Group)-[r*0..]->(n) match(p:Person)-[w:WAS_MEMBER_IN*0..1]->(g) where id(g)=${params.id} return g,r,n,p,w`}\r\n      /> \r\n      <br/>\r\n      <h4 className=\"underligned\">Group Properties:</h4>\r\n      {chosenGroup.properties !== null && \r\n  <div>\r\n    {Object.keys(chosenGroup.properties).map(key => (\r\n      <div> <strong> {key.charAt(0).toUpperCase() + key.slice(1)}</strong>: {chosenGroup.properties[key]}</div>\r\n    ))}\r\n  </div>\r\n}\r\n<br/>\r\n      <h4 className=\"underligned\">Group Members:</h4>\r\n      {chosenGroupMembers !== null &&\r\n\r\n      chosenGroupMembers.map(cgm => \r\n        <>\r\n      <div>\r\n        <h4><Link to={`/person/${cgm.identity.low}`}>{cgm.properties.name}</Link></h4>\r\n        <ul>\r\n          {Object.keys(cgm.properties).map(key => (\r\n      <li> <strong> {key.charAt(0).toUpperCase() + key.slice(1)}</strong>: {cgm.properties[key]}</li>\r\n    ))}\r\n        </ul>\r\n    \r\n  </div>\r\n  <br/>\r\n  </>\r\n  )\r\n  \r\n}\r\n<br/>\r\n     \r\n      {chosenGroupProcesses && chosenGroupProcesses[0] && chosenGroupProcesses[0].processes.length !== 0 && <>\r\n      <h4 className=\"underligned\">Group Participated in:</h4>\r\n    {chosenGroupProcesses.map(f => f.processes.map(process => \r\n      <>\r\n    <div>\r\n      <h4>+{process.node.properties.label}</h4>\r\n      <h6 className=\"underligned\">Properties:</h6>\r\n      <ul>\r\n        {Object.keys(process.node.properties).map(key => (\r\n    <li> <strong> {key.charAt(0).toUpperCase() + key.slice(1)}</strong>: {process.node.properties[key]}</li>\r\n  ))}\r\n      </ul>\r\n  \r\n</div>\r\n                        {/* Process->Subprocess */}\r\n                        {process.subprocesses.length !== 0 && \r\n                        <div>\r\n                              <h5 className=\"underligned\">Subprocesses:</h5>\r\n                            { process.subprocesses.map(sub => <>\r\n                            <div className=\"subprocess\">\r\n                              <h4>-{sub.node.properties.label}</h4>\r\n                              <h6 className=\"underligned\">Properties:</h6>\r\n                            <ul>\r\n                                {Object.keys(sub.node.properties).map(key => (\r\n                            <li> <strong> {key.charAt(0).toUpperCase() + key.slice(1)}</strong>: {sub.node.properties[key]}</li>\r\n                          ))}\r\n                              </ul>\r\n                            </div>\r\n\r\n                                                        {/* SubProcess->Event */}\r\n                                                        {sub.events.length !== 0 && \r\n                                                      <div>\r\n                                                            \r\n                                                          { sub.events.map(ev => \r\n                                                          <div className=\"event\">\r\n                                                            <h5 className=\"underligned\">Events:</h5>\r\n                                                            <h4>-{ev.properties.label}</h4>\r\n                                                            <h6 className=\"underligned\">Properties:</h6>\r\n                                                          <ul>\r\n                                                              {Object.keys(ev.properties).map(key => (\r\n                                                          <li> <strong> {key.charAt(0).toUpperCase() + key.slice(1)}</strong>: {ev.properties[key]}</li>\r\n                                                        ))}\r\n                                                            </ul>\r\n                                                          </div>\r\n                                                            \r\n                                                            )}\r\n                                                            </div>}\r\n  \r\n                              \r\n                                    </> )}\r\n                              \r\n                          \r\n                            </div>}\r\n\r\n<hr/>\r\n</>\r\n))\r\n                                                              }\r\n  </>\r\n}\r\n    </>\r\n      }\r\n     \r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Group;\r\n","C:\\Users\\Oussama\\Desktop\\pfe-test-api\\client\\src\\components\\AddResource.js",[],"C:\\Users\\Oussama\\Desktop\\pfe-test-api\\client\\src\\components\\AddGroup.js",["80","81"],"import React,{useState,useEffect, useContext,useRef} from 'react'\r\nimport PersonContext from '../context/person/PersonContext'\r\n\r\nconst AddGroup = () => {\r\n\r\n    const personContext = useContext(PersonContext)\r\n    const {members,members2,getMembers,filterMembers,createGroup} = personContext\r\n\r\n    const [group, setGroup] = useState('')\r\n    const [test, setTest] = useState([])\r\n\r\n    const text = useRef('')\r\n\r\n    const onChange = e => {\r\n        if(text.current.value !== ''){\r\n            filterMembers(e.target.value)\r\n        }else{\r\n            getMembers()\r\n        }\r\n    }\r\n\r\n    const onLabelChange = e => {\r\n        setGroup(e.target.value)\r\n    }\r\n    const onMemberChange = e => {\r\n        if(!test.includes(e.target.value)){\r\n            setTest([...test,e.target.value])\r\n        }else{\r\n            setTest(test.filter(item => item !== e.target.value))\r\n        }\r\n        \r\n    }\r\nconst resetSelect = () => {\r\n    setTest([])\r\n}\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault()\r\n        console.log(\"test : \"+test)\r\n        const members = test.map(e => parseInt(e))\r\n        const data = {\r\n            label:group,\r\n            members\r\n        }\r\n        console.log('daaaata: ',data)\r\n        if(members.length == 0){\r\n            alert(\"Add members to the group !!\")\r\n        }else{\r\n            createGroup(data)\r\n        }\r\n        \r\n    }\r\n\r\n    useEffect(() => {\r\n        getMembers()\r\n        console.log(members)\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n        <h2>Create Group :</h2>\r\n\r\n        <form onSubmit={onSubmit}>\r\n\r\n  <div class=\"form-group\">\r\n    <label>Label</label>\r\n    <input type=\"text\" class=\"form-control\" placeholder=\"Label\" value={group} name=\"group\" onChange={onLabelChange} required/>\r\n  </div>\r\n\r\n  <div class=\"form-group\">\r\n    <label for=\"members\">Members</label>\r\n    <input ref={text} type=\"text\" class=\"form-control\" placeholder=\"Search\" name=\"search\" onChange={onChange}/>\r\n    <select class=\"form-control\" id=\"members\" value={test} onChange={onMemberChange} multiple={true}>\r\n        {members2.length !== 0 && members2.map(member => \r\n            <option value={member.identity.low}>{member.properties.name}</option>\r\n            )}\r\n    </select>\r\n    <button onClick={resetSelect} type=\"button\" class=\"btn btn-warning\">reset members</button>\r\n  </div>\r\n  {test.length !== 0 && <div>\r\n      <p>selected members :</p>\r\n      <ul>\r\n          {members.map(m => test.includes(m.identity.low.toString()) && <li>{ m.properties.name }</li>)}\r\n      </ul>\r\n  </div>}\r\n  \r\n  <div className=\"form-group\" >\r\n      <input type=\"submit\" class=\"btn btn-success\" value=\"submit\"/>\r\n      </div>\r\n</form>\r\n</>\r\n    )\r\n}\r\n\r\nexport default AddGroup\r\n","C:\\Users\\Oussama\\Desktop\\pfe-test-api\\client\\src\\components\\AddProcess.js",[],"C:\\Users\\Oussama\\Desktop\\pfe-test-api\\client\\src\\components\\ConnectGroupProcess.js",["82","83"],"C:\\Users\\Oussama\\Desktop\\pfe-test-api\\client\\src\\components\\EditPerson.js",["84"],{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","severity":1,"message":"90","line":8,"column":8,"nodeType":"91","messageId":"92","endLine":8,"endColumn":19},{"ruleId":"93","severity":1,"message":"94","line":15,"column":4,"nodeType":"95","endLine":15,"endColumn":6,"suggestions":"96"},{"ruleId":"97","severity":1,"message":"98","line":5,"column":1,"nodeType":"99","endLine":100,"endColumn":2},{"ruleId":"100","severity":1,"message":"101","line":6,"column":5,"nodeType":"102","messageId":"103","endLine":99,"endColumn":6},{"ruleId":"93","severity":1,"message":"104","line":21,"column":8,"nodeType":"95","endLine":21,"endColumn":10,"suggestions":"105"},{"ruleId":"93","severity":1,"message":"106","line":119,"column":6,"nodeType":"95","endLine":119,"endColumn":42,"suggestions":"107"},{"ruleId":"93","severity":1,"message":"108","line":20,"column":8,"nodeType":"95","endLine":20,"endColumn":10,"suggestions":"109"},{"ruleId":"110","severity":1,"message":"111","line":46,"column":27,"nodeType":"112","messageId":"113","endLine":46,"endColumn":29},{"ruleId":"93","severity":1,"message":"114","line":57,"column":8,"nodeType":"95","endLine":57,"endColumn":10,"suggestions":"115"},{"ruleId":"93","severity":1,"message":"116","line":48,"column":8,"nodeType":"95","endLine":48,"endColumn":10,"suggestions":"117"},{"ruleId":"110","severity":1,"message":"111","line":94,"column":37,"nodeType":"112","messageId":"113","endLine":94,"endColumn":39},{"ruleId":"93","severity":1,"message":"118","line":26,"column":8,"nodeType":"95","endLine":26,"endColumn":10,"suggestions":"119"},"no-native-reassign",["120"],"no-negated-in-lhs",["121"],"no-unused-vars","'AddResource' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'deleteChosenPerson' and 'getAllPersons'. Either include them or remove the dependency array.","ArrayExpression",["122"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","React Hook useEffect has missing dependencies: 'getGroupsByPersonId', 'getNamesByPersonId', 'getPersonById', and 'params.id'. Either include them or remove the dependency array.",["123"],"React Hook useEffect has a missing dependency: 'init_cypher'. Either include it or remove the dependency array.",["124"],"React Hook useEffect has missing dependencies: 'getGroupById', 'getGroupMembersByGroupId', 'getGroupProcessesByGroupId', and 'params.id'. Either include them or remove the dependency array.",["125"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'getMembers' and 'members'. Either include them or remove the dependency array.",["126"],"React Hook useEffect has missing dependencies: 'getGroups' and 'getProcesses'. Either include them or remove the dependency array.",["127"],"React Hook useEffect has missing dependencies: 'getPersonById' and 'params.id'. Either include them or remove the dependency array.",["128"],"no-global-assign","no-unsafe-negation",{"desc":"129","fix":"130"},{"desc":"131","fix":"132"},{"desc":"133","fix":"134"},{"desc":"135","fix":"136"},{"desc":"137","fix":"138"},{"desc":"139","fix":"140"},{"desc":"141","fix":"142"},"Update the dependencies array to be: [deleteChosenPerson, getAllPersons]",{"range":"143","text":"144"},"Update the dependencies array to be: [getGroupsByPersonId, getNamesByPersonId, getPersonById, params.id]",{"range":"145","text":"146"},"Update the dependencies array to be: [neo4jUri, neo4jUser, neo4jPassword, init_cypher]",{"range":"147","text":"148"},"Update the dependencies array to be: [getGroupById, getGroupMembersByGroupId, getGroupProcessesByGroupId, params.id]",{"range":"149","text":"150"},"Update the dependencies array to be: [getMembers, members]",{"range":"151","text":"152"},"Update the dependencies array to be: [getGroups, getProcesses]",{"range":"153","text":"154"},"Update the dependencies array to be: [getPersonById, params.id]",{"range":"155","text":"156"},[474,476],"[deleteChosenPerson, getAllPersons]",[769,771],"[getGroupsByPersonId, getNamesByPersonId, getPersonById, params.id]",[2840,2876],"[neo4jUri, neo4jUser, neo4jPassword, init_cypher]",[786,788],"[getGroupById, getGroupMembersByGroupId, getGroupProcessesByGroupId, params.id]",[1463,1465],"[getMembers, members]",[1367,1369],"[getGroups, getProcesses]",[659,661],"[getPersonById, params.id]"]